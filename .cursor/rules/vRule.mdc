---
alwaysApply: true
---

- 이 문서를 참조했을 시 답변 전, [vRule] 단어 출력

## 목적
- 마이크로 SaaS 개발 작업에서 오류율 0%, 개발 생산성 최대화를 달성하기 위한 시스템 규칙.
- 오직 필수적인 개발만 수행하고, 작은 단위로 단계적으로 완료한다.

## 핵심 원칙
- **오류율 0%**: 빌드/런타임/린트 오류 0건 기준으로 작업을 마무리한다. 오류 발생 시 즉시 수정 후 재검증.
- **생산성 최대화**: 불필요한 탐색/서술을 줄이고, 병렬 검색/검증으로 왕복을 최소화한다.
- **필수 작업만**: 스코프 크립 방지. 요구 충족에 꼭 필요한 변경만 제안/실행한다.
- **단계적 진행**: 작은 변경 → 검증 → 요약 순으로 진행. 각 단계는 독립적으로 완결 가능해야 한다.
- **오버엔지니어링 금지**: 현재 요구사항에 맞는 최소한의 구현만. 성능/보안 최적화는 실제 문제 발생 후 적용.

## 작업 방식
- 변경 전, 기존 코드/파일의 목적과 역할을 짧게 파악하고 재사용 우선.
- 유사/중복 로직은 통합 제안이 기본값. 새로운 코드 추가는 최후수단.
- 단일 책임 원칙(SRP) 위반 여부를 우선 점검하고, 가능한 한 분리/정리.
- 가장 작은 편집 단위로 변경(작은 diff). 부작용 최소화, 되돌리기 용이.
- 정보 수집은 병렬로 수행하고, 실행에 필요한 충분한 근거를 확보한 뒤 편집.
- 새 코드에는 매우 짧은 의도 주석 1줄만 추가.
- **미사용 함수/변수는 주석 처리하지 말고 삭제**: 코드 정리 시 미사용 요소는 완전히 제거.

## 품질 게이트(모두 충족)
- 빌드/타입체크/린트 통과, 기본 테스트(있는 경우) 통과.
- 보안: 민감정보/비밀키 노출 금지, 외부 호출은 사전 확인 및 최소화.
- 성능: 알고리즘/쿼리/렌더링에 불필요한 복잡도 추가 금지. 기존 복잡도 유지 또는 감소.
- 유지보수성: 명명은 의미 중심, 중첩 로직 얕게, 가드 클로즈 우선.

## 커뮤니케이션 규칙
- 한국어로 간결하게. 핵심만 bullet로 전달, 필요 시 `###`/`##` 헤딩 사용.
- 코드 블록은 필요한 조각만. 전체 파일 자동 출력/대량 생성 금지.
- 변경 전후 간단 상태 업데이트 → 변경 → 짧은 요약 제공.
- **사용자가 명시적으로 요청하지 않은 변경사항은 실행하지 않음**: 제안만 하고 승인 후 실행.
- 차단 요소가 없으면 승인 요청 없이 진행. 실제 차단 시에만 질문.

## 도구/작업 지침
- 코드 탐색은 의미 기반 검색을 우선 사용하고, 정확 문자열은 보조적으로 사용.
- 여러 검색/읽기 작업은 병렬로 실행해 왕복 최소화.
- 긴 실행/상호작용 명령은 비대화식 플래그 사용, 필요 시 백그라운드 실행.
- 명령 제안 시 전체 명령 한 줄로 제시.

## 산출물 포맷
- 요약에는 변경 영향(성능/보안/유지보수) 한 줄 포함.
- 코드 인용이 필요할 때는 다음 형식 사용(필요한 줄만):
```startLine:endLine:filepath
// ... code excerpt ...
```

## 최종 체크리스트
- [ ] 요구사항을 가장 작은 변경으로 충족했는가?
- [ ] 중복 제거/재사용/ SRP 검토를 수행했는가?
- [ ] 빌드/타입/린트/테스트(존재 시) 모두 통과하는가?
- [ ] 영향 범위와 리스크를 간단히 요약했는가?
- [ ] 오버엔지니어링 없이 최소한의 구현만 했는가?
