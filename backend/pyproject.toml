[tool.ruff]
# Python 버전 호환성
target-version = "py311"

# 라인 길이 제한
line-length = 88

# 캐시 디렉토리 설정
cache-dir = ".ruff_cache"

# 제외할 파일/디렉토리
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    "log",
    ".ruff_cache",
]

[tool.ruff.lint]
# 활성화할 규칙들
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]

# 비활성화할 규칙들
ignore = [
    "E501",  # line too long (black이 처리)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "UP007",  # Use X | Y for type annotations (Python 3.11+ 지원)
    "UP035",  # Import from collections.abc instead (기존 코드 유지)
    "UP045",  # Use X | None for type annotations (Python 3.11+ 지원)
]

# 자동 수정 가능한 규칙들
fixable = ["ALL"]

# 허용하지 않을 규칙들 (자동 수정 불가)
unfixable = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
# 특정 파일에서 특정 규칙 무시
"__init__.py" = ["F401"]  # unused imports

[tool.ruff.lint.isort]
# import 정렬 설정
known-first-party = ["app", "external"]
known-third-party = ["fastapi", "httpx", "pydantic", "tenacity"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.format]
# 포맷팅 설정
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[project]
name = "remocon-backend"
version = "0.1.0"
description = "Futures Remote Trading Microservice"
authors = [
    {name = "RemoCon Team", email = "dev@remocon.com"}
]

requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "httpx>=0.25.0",
    "pydantic>=2.5.0",
    "cachetools>=5.3.0",
    "tenacity>=8.2.0",
    "aiofiles>=23.2.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.12.0",
    "pre-commit>=3.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app", "external"]
